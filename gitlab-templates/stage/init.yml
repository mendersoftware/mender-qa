
init_workspace:
  stage: init
  image: alpine:latest
  script:
    # Traps only work if executed in a sub shell.
    - "("

    # Default value, will later be overwritten if successful
    - echo "failure" > /JOB_RESULT.txt

    - function handle_exit() {
      ${CI_PROJECT_DIR}/scripts/maybe-wait-in-stage.sh WAIT_IN_STAGE_INIT ${CI_PROJECT_DIR}/WAIT_IN_STAGE_INIT;
      };
      trap handle_exit EXIT

    - export WORKSPACE=$(realpath ${CI_PROJECT_DIR}/..)
    - apk --update add git openssh bash python3 curl py3-pip jq
    - pip3 install --upgrade pyyaml

    # Post job status
    - ${CI_PROJECT_DIR}/scripts/github_pull_request_status pending "Gitlab ${CI_JOB_NAME} started" "${CI_JOB_URL}" "${CI_JOB_NAME}/${INTEGRATION_REV}"

    # Prepare SSH keys
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts

    # Clean WORKSPACE and clone all repos
    - find ${WORKSPACE}
      -mindepth 1
      -maxdepth 1
      -not -name $(basename ${CI_PROJECT_DIR})
      -exec rm -rf '{}' ';'
    - cd ${WORKSPACE}
    - git init . && git remote add origin https://github.com/mendersoftware/poky
    - git fetch && git checkout -f origin/${POKY_REV}
    - echo -e "# $(git log -n1 --oneline)\nexport POKY_REV=$POKY_REV\nexport POKY_REV_GIT_SHA=$(git rev-parse HEAD)" > ${CI_PROJECT_DIR}/build_revisions.env

    # Add MENDER_QA_REV, which is special, since it is this repository.
    - if echo "$CI_BUILD_REF_NAME" | egrep '^pr_[0-9]+$'; then
        export MENDER_QA_REV="pull/$(echo "$CI_BUILD_REF_NAME" | egrep -o '[0-9]+')/head";
      else
        export MENDER_QA_REV="$CI_BUILD_REF_NAME";
      fi
    - (cd mender-qa && echo -e "# $(git log -n1 --oneline)\nexport MENDER_QA_REV=$MENDER_QA_REV\nexport MENDER_QA_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/integration
    - (cd integration &&
      git fetch -u -f origin ${INTEGRATION_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${INTEGRATION_REV})
    - (cd integration && echo -e "# $(git log -n1 --oneline)\nexport INTEGRATION_REV=$INTEGRATION_REV\nexport INTEGRATION_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    # Add other repositories.
    - git clone https://github.com/mendersoftware/meta-mender
    - (cd meta-mender &&
      git fetch -u -f origin ${META_MENDER_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${META_MENDER_REV})
    - (cd meta-mender && echo -e "# $(git log -n1 --oneline)\nexport META_MENDER_REV=$META_MENDER_REV\nexport META_MENDER_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/mender go/src/github.com/mendersoftware/mender
    - (cd go/src/github.com/mendersoftware/mender &&
      git fetch -u -f origin ${MENDER_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MENDER_REV})
    - (cd go/src/github.com/mendersoftware/mender && echo -e "# $(git log -n1 --oneline)\nexport MENDER_REV=$MENDER_REV\nexport MENDER_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/deployments go/src/github.com/mendersoftware/deployments
    - (cd go/src/github.com/mendersoftware/deployments &&
      git fetch -u -f origin ${DEPLOYMENTS_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${DEPLOYMENTS_REV})
    - (cd go/src/github.com/mendersoftware/deployments && echo -e "# $(git log -n1 --oneline)\nexport DEPLOYMENTS_REV=$DEPLOYMENTS_REV\nexport DEPLOYMENTS_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/deployments-enterprise go/src/github.com/mendersoftware/deployments-enterprise
    - (cd go/src/github.com/mendersoftware/deployments-enterprise &&
      git fetch -u -f origin ${DEPLOYMENTS_ENTERPRISE_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${DEPLOYMENTS_ENTERPRISE_REV})
    - (cd go/src/github.com/mendersoftware/deployments-enterprise && echo -e "# $(git log -n1 --oneline)\nexport DEPLOYMENTS_ENTERPRISE_REV=$DEPLOYMENTS_ENTERPRISE_REV\nexport DEPLOYMENTS_ENTERPRISE_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/deviceauth go/src/github.com/mendersoftware/deviceauth
    - (cd go/src/github.com/mendersoftware/deviceauth &&
      git fetch -u -f origin ${DEVICEAUTH_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${DEVICEAUTH_REV})
    - (cd go/src/github.com/mendersoftware/deviceauth && echo -e "# $(git log -n1 --oneline)\nexport DEVICEAUTH_REV=$DEVICEAUTH_REV\nexport DEVICEAUTH_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/gui
    - (cd gui &&
      git fetch -u -f origin ${GUI_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${GUI_REV})
    - (cd gui && echo -e "# $(git log -n1 --oneline)\nexport GUI_REV=$GUI_REV\nexport GUI_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/inventory go/src/github.com/mendersoftware/inventory
    - (cd go/src/github.com/mendersoftware/inventory &&
      git fetch -u -f origin ${INVENTORY_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${INVENTORY_REV})
    - (cd go/src/github.com/mendersoftware/inventory && echo -e "# $(git log -n1 --oneline)\nexport INVENTORY_REV=$INVENTORY_REV\nexport INVENTORY_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)


    - git clone git@github.com:mendersoftware/inventory-enterprise.git go/src/github.com/mendersoftware/inventory-enterprise
    - (cd go/src/github.com/mendersoftware/inventory-enterprise &&
      git fetch -u -f origin ${INVENTORY_ENTERPRISE_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${INVENTORY_ENTERPRISE_REV})
    - (cd go/src/github.com/mendersoftware/inventory-enterprise && echo -e "# $(git log -n1 --oneline)\nexport INVENTORY_ENTERPRISE_REV=$INVENTORY_ENTERPRISE_REV\nexport INVENTORY_ENTERPRISE_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/useradm go/src/github.com/mendersoftware/useradm
    - (cd go/src/github.com/mendersoftware/useradm &&
      git fetch -u -f origin ${USERADM_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${USERADM_REV})
    - (cd go/src/github.com/mendersoftware/useradm && echo -e "# $(git log -n1 --oneline)\nexport USERADM_REV=$USERADM_REV\nexport USERADM_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/useradm-enterprise go/src/github.com/mendersoftware/useradm-enterprise
    - (cd go/src/github.com/mendersoftware/useradm-enterprise &&
      git fetch -u -f origin ${USERADM_ENTERPRISE_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${USERADM_ENTERPRISE_REV})
    - (cd go/src/github.com/mendersoftware/useradm-enterprise && echo -e "# $(git log -n1 --oneline)\nexport USERADM_ENTERPRISE_REV=$USERADM_ENTERPRISE_REV\nexport USERADM_ENTERPRISE_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/mender-api-gateway-docker
    - (cd mender-api-gateway-docker &&
      git fetch -u -f origin ${MENDER_API_GATEWAY_DOCKER_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MENDER_API_GATEWAY_DOCKER_REV})
    - (cd mender-api-gateway-docker && echo -e "# $(git log -n1 --oneline)\nexport MENDER_API_GATEWAY_DOCKER_REV=$MENDER_API_GATEWAY_DOCKER_REV\nexport MENDER_API_GATEWAY_DOCKER_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/mender-stress-test-client go/src/github.com/mendersoftware/mender-stress-test-client
    - (cd go/src/github.com/mendersoftware/mender-stress-test-client &&
      git fetch -u -f origin ${MENDER_STRESS_TEST_CLIENT_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MENDER_STRESS_TEST_CLIENT_REV})
    - (cd go/src/github.com/mendersoftware/mender-stress-test-client && echo -e "# $(git log -n1 --oneline)\nexport MENDER_STRESS_TEST_CLIENT_REV=$MENDER_STRESS_TEST_CLIENT_REV\nexport MENDER_STRESS_TEST_CLIENT_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/mender-artifact go/src/github.com/mendersoftware/mender-artifact
    - (cd go/src/github.com/mendersoftware/mender-artifact &&
      git fetch -u -f origin ${MENDER_ARTIFACT_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MENDER_ARTIFACT_REV})
    - (cd go/src/github.com/mendersoftware/mender-artifact && echo -e "# $(git log -n1 --oneline)\nexport MENDER_ARTIFACT_REV=$MENDER_ARTIFACT_REV\nexport MENDER_ARTIFACT_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/tenantadm go/src/github.com/mendersoftware/tenantadm
    - (cd go/src/github.com/mendersoftware/tenantadm &&
      git fetch -u -f origin ${TENANTADM_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${TENANTADM_REV})
    - (cd go/src/github.com/mendersoftware/tenantadm && echo -e "# $(git log -n1 --oneline)\nexport TENANTADM_REV=$TENANTADM_REV\nexport TENANTADM_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/workflows go/src/github.com/mendersoftware/workflows
    - (cd go/src/github.com/mendersoftware/workflows &&
      git fetch -u -f origin ${WORKFLOWS_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${WORKFLOWS_REV})
    - (cd go/src/github.com/mendersoftware/workflows && echo -e "# $(git log -n1 --oneline)\nexport WORKFLOWS_REV=$WORKFLOWS_REV\nexport WORKFLOWS_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/workflows-enterprise go/src/github.com/mendersoftware/workflows-enterprise
    - (cd go/src/github.com/mendersoftware/workflows-enterprise &&
      git fetch -u -f origin ${WORKFLOWS_ENTERPRISE_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${WORKFLOWS_ENTERPRISE_REV})
    - (cd go/src/github.com/mendersoftware/workflows-enterprise && echo -e "# $(git log -n1 --oneline)\nexport WORKFLOWS_ENTERPRISE_REV=$WORKFLOWS_ENTERPRISE_REV\nexport WORKFLOWS_ENTERPRISE_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/create-artifact-worker go/src/github.com/mendersoftware/create-artifact-worker
    - (cd go/src/github.com/mendersoftware/create-artifact-worker &&
      git fetch -u -f origin ${CREATE_ARTIFACT_WORKER_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${CREATE_ARTIFACT_WORKER_REV})
    - (cd go/src/github.com/mendersoftware/create-artifact-worker && echo -e "# $(git log -n1 --oneline)\nexport CREATE_ARTIFACT_WORKER_REV=$CREATE_ARTIFACT_WORKER_REV\nexport CREATE_ARTIFACT_WORKER_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git://git.openembedded.org/meta-openembedded.git
    - (cd meta-openembedded && git checkout -f ${META_OPENEMBEDDED_REV})
    - (cd meta-openembedded && echo -e "# $(git log -n1 --oneline)\nexport META_OPENEMBEDDED_REV=$META_OPENEMBEDDED_REV\nexport META_OPENEMBEDDED_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git://github.com/agherzan/meta-raspberrypi.git
    - (cd meta-raspberrypi && git checkout -f ${META_RASPBERRYPI_REV})
    - (cd meta-raspberrypi && echo -e "# $(git log -n1 --oneline)\nexport META_RASPBERRYPI_REV=$META_RASPBERRYPI_REV\nexport META_RASPBERRYPI_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git://github.com/mendersoftware/mender-conductor.git go/src/github.com/mendersoftware/mender-conductor
    - (cd go/src/github.com/mendersoftware/mender-conductor &&
      git fetch -u -f origin ${MENDER_CONDUCTOR_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MENDER_CONDUCTOR_REV})
    - (cd go/src/github.com/mendersoftware/mender-conductor && echo -e "# $(git log -n1 --oneline)\nexport MENDER_CONDUCTOR_REV=$MENDER_CONDUCTOR_REV\nexport MENDER_CONDUCTOR_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/mender-conductor-enterprise.git go/src/github.com/mendersoftware/mender-conductor-enterprise
    - (cd go/src/github.com/mendersoftware/mender-conductor-enterprise &&
      git fetch -u -f origin ${MENDER_CONDUCTOR_ENTERPRISE_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MENDER_CONDUCTOR_ENTERPRISE_REV})
    - (cd go/src/github.com/mendersoftware/mender-conductor-enterprise && echo -e "# $(git log -n1 --oneline)\nexport MENDER_CONDUCTOR_ENTERPRISE_REV=$MENDER_CONDUCTOR_ENTERPRISE_REV\nexport MENDER_CONDUCTOR_ENTERPRISE_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone https://github.com/mendersoftware/mender-cli.git go/src/github.com/mendersoftware/mender-cli
    - (cd go/src/github.com/mendersoftware/mender-cli &&
      git fetch -u -f origin ${MENDER_CLI_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MENDER_CLI_REV})
    - (cd go/src/github.com/mendersoftware/mender-cli && echo -e "# $(git log -n1 --oneline)\nexport MENDER_CLI_REV=$MENDER_CLI_REV\nexport MENDER_CLI_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/auditlogs go/src/github.com/mendersoftware/auditlogs
    - (cd go/src/github.com/mendersoftware/auditlogs &&
      git fetch -u -f origin ${AUDITLOGS_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${AUDITLOGS_REV})
    - (cd go/src/github.com/mendersoftware/auditlogs && echo -e "# $(git log -n1 --oneline)\nexport AUDITLOGS_REV=$AUDITLOGS_REV\nexport AUDITLOGS_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - git clone git@github.com:mendersoftware/mtls-ambassador go/src/github.com/mendersoftware/mtls-ambassador
    - (cd go/src/github.com/mendersoftware/mtls-ambassador &&
      git fetch -u -f origin ${MTLS_AMBASSADOR_REV}:pr &&
      git checkout pr ||
      git checkout -f -b pr ${MTLS_AMBASSADOR_REV})
    - (cd go/src/github.com/mendersoftware/mtls-ambassador && echo -e "# $(git log -n1 --oneline)\nexport MTLS_AMBASSADOR_REV=$MTLS_AMBASSADOR_REV\nexport MTLS_AMBASSADOR_REV_GIT_SHA=$(git rev-parse HEAD)" >> ${CI_PROJECT_DIR}/build_revisions.env)

    - cat ${CI_PROJECT_DIR}/build_revisions.env
    - tar -czf /tmp/workspace.tar.gz .
    - mv /tmp/workspace.tar.gz ${CI_PROJECT_DIR}/workspace.tar.gz

    # Always keep this at the end of the script stage
    - echo "success" > /JOB_RESULT.txt

    - ")"

  after_script:
    - export WORKSPACE=$(realpath ${CI_PROJECT_DIR}/..)
    - ${CI_PROJECT_DIR}/scripts/github_pull_request_status $(cat /JOB_RESULT.txt) "Gitlab ${CI_JOB_NAME} finished" "${CI_JOB_URL}" "${CI_JOB_NAME}/${INTEGRATION_REV}"

  artifacts:
    expire_in: 2w
    paths:
      - workspace.tar.gz
      - build_revisions.env
