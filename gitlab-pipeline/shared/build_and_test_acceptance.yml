
.template_build_test_acc:
  image: mendersoftware/mender-test-containers:mender-client-acceptance-testing
  needs:
    - init:workspace
    - build:mender-monitor-package
  tags:
    - mender-qa-slave-highcpu
  before_script:
    # collect cpu, load avg, memory and io usage every 2 secs forever
    # use 'sar' from sysstat to render the result file manually
    - service sysstat start && sar -P ALL 2 -o /var/log/sysstat/sysstat.log -uqrbS >/dev/null 2>&1 &
    # Default value, will later be overwritten if successful
    - echo "failure" > /JOB_RESULT.txt
    # Export required yocto-build script variables
    - export WORKSPACE=$(realpath ${CI_PROJECT_DIR}/..)
    - chown -R mender:mender ${WORKSPACE}
    # This template is used in both build and acc test stages,
    # for build stage, force default configuration QEMUX86_64_UEFI_GRUB
    - test -n "$ONLY_BUILD" && export BUILD_QEMUX86_64_UEFI_GRUB=true
    - test -n "$ONLY_BUILD" && export TEST_QEMUX86_64_UEFI_GRUB=false
    # Post job status
    - source ${CI_PROJECT_DIR}/build_revisions.env
    - ${CI_PROJECT_DIR}/scripts/github_pull_request_status pending "Gitlab ${CI_JOB_NAME} started" "${CI_JOB_URL}" "${CI_JOB_NAME}/${INTEGRATION_REV}"
    # Enable nesting VMs
    - modprobe -r kvm_intel && modprobe kvm_intel nested=Y
    # Enable NFS cache for yocto
    - mount.nfs4 ${SSTATE_CACHE_INTRNL_ADDR}:/sstate-cache /mnt/sstate-cache
    # Traps only work if executed in a sub shell.
    - "("
    - mv workspace.tar.gz stage-artifacts /tmp
    - rm -rf ${WORKSPACE}
    - mkdir -p ${WORKSPACE}
    - cd ${WORKSPACE}
    - tar -xf /tmp/workspace.tar.gz
    - mv /tmp/stage-artifacts .

    - function handle_exit() {
      if test -n "$ONLY_BUILD"; then
      ${CI_PROJECT_DIR}/scripts/maybe-wait-in-stage.sh WAIT_IN_STAGE_BUILD ${CI_PROJECT_DIR}/WAIT_IN_STAGE_BUILD;
      else
      ${CI_PROJECT_DIR}/scripts/maybe-wait-in-stage.sh WAIT_IN_STAGE_TEST ${CI_PROJECT_DIR}/WAIT_IN_STAGE_TEST;
      fi;
      };
      trap handle_exit EXIT

    - source ${CI_PROJECT_DIR}/build_revisions.env
    - chown -R mender:mender ${WORKSPACE}
    - export HOME="/home/mender"
    - sudo -E -u mender ${WORKSPACE}/mender-qa/scripts/yocto-build-and-test.sh

    - if [ -d $WORKSPACE/meta-mender/tests/acceptance/coverage ]; then
    -   mkdir -p ${CI_PROJECT_DIR}/acceptance-tests-coverage/mender-client
    -   cp -r $WORKSPACE/meta-mender/tests/acceptance/coverage/* ${CI_PROJECT_DIR}/acceptance-tests-coverage/mender-client
    -   if [ $( ( ls /tmp/coverage*-artifact* 2>/dev/null || true ) | wc -l ) -gt 0 ]; then
    -     mkdir -p ${CI_PROJECT_DIR}/acceptance-tests-coverage/mender-artifact
    -     cp -r /tmp/coverage*-artifact* ${CI_PROJECT_DIR}/acceptance-tests-coverage/mender-artifact
    -   fi
    - fi

    # Always keep this at the end of the script stage
    - echo "success" > /JOB_RESULT.txt

    - ")"
