
include:
  # TODO QA-1178: Align mender-gateway and mender-monitor
  - project: 'Northern.tech/Mender/mender-gateway'
    file: '.gitlab-ci-build-package.yml'
    ref: 'master'

build:client:docker:
  tags:
    - hetzner-amd-beefy
  stage: build
  only:
    variables:
      - $BUILD_CLIENT == "true"
  variables:
    DOCKER_BUILDKIT: 1
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_SUBMODULE_DEPTH: 1
    DOCKER_VERSION: "27.3"
  needs: []
  allow_failure: false
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:${DOCKER_VERSION}
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:${DOCKER_VERSION}-dind
      alias: docker
  before_script:
    # Default value, will later be overwritten if successful
    - echo "failure" > /JOB_RESULT.txt
    # Dependencies
    - apk --update add curl jq
    # Check out integration repository
    - git init ${CI_PROJECT_DIR}/integration
    - cd ${CI_PROJECT_DIR}/integration
    - git remote add origin https://github.com/mendersoftware/integration.git
    - git fetch --update-head-ok --force origin $INTEGRATION_REV:pr && git checkout pr
        || git checkout --force -b pr $INTEGRATION_REV
    # Post job status
    - ${CI_PROJECT_DIR}/scripts/github_pull_request_status pending "Gitlab ${CI_JOB_NAME} started" "${CI_JOB_URL}" "${CI_JOB_NAME}/${INTEGRATION_REV}"
  script:
    - echo ${CI_REGISTRY_PASSWORD} | docker login --username ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}
    - cd ${CI_PROJECT_DIR}/integration/extra/mender-client-docker-addons
    # QA-1176 TODO: move the "latest to tag" translation to the Dockerfile
    - |
      get_latest_tag() {
        git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' --refs $1 |
          grep -E 'v?[0-9]+\.[0-9]+\.[0-9]+.*$' |
          tail -n1 |
          cut -d'/' -f3
      }
    - if [ "$MENDER_REV" = "latest" ]; then
    -   MENDER_REV=$(get_latest_tag https://github.com/mendersoftware/mender.git)
    - fi
    - if [ "$MENDER_CONNECT_REV" = "latest" ]; then
    -   MENDER_CONNECT_REV=$(get_latest_tag https://github.com/mendersoftware/mender-connect.git)
    - fi
    - if [ "$MENDER_SETUP_REV" = "latest" ]; then
    -   MENDER_SETUP_REV=$(get_latest_tag https://github.com/mendersoftware/mender-setup.git)
    - fi
    - docker build
      --build-arg MENDER_CLIENT_REV=$MENDER_REV
      --build-arg MENDER_CONNECT_REV=$MENDER_CONNECT_REV
      --build-arg MENDER_SETUP_REV=$MENDER_SETUP_REV
      --tag ${GITLAB_REGISTRY_PREFIX}-mender-client-docker-addons
      --push
      .
    - echo "success" > /JOB_RESULT.txt
  after_script:
    - ${CI_PROJECT_DIR}/scripts/github_pull_request_status $(cat /JOB_RESULT.txt) "Gitlab ${CI_JOB_NAME} finished" "${CI_JOB_URL}" "${CI_JOB_NAME}/${INTEGRATION_REV}"

build:mender-monitor:package:
  tags:
    - mender-qa-worker-generic-light
  stage: build
  image: alpine:3.12
  needs: []
  allow_failure: false
  before_script:
    # Early exit if version is latest
    - if [ "$MONITOR_CLIENT_REV" = "latest" ]; then
    -   exit 0
    - fi
    - apk add --no-cache git openssh
    # Prepare SSH keys
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    # Clone monitor-client
    - git clone git@github.com:mendersoftware/monitor-client monitor-client
    - cd monitor-client
    - ( git fetch -u -f origin $MONITOR_CLIENT_REV:pr &&
          git checkout pr ||
          git checkout -f -b pr $MONITOR_CLIENT_REV
      ) || return 1
  script:
    - apk add --no-cache make git
    - git fetch --tags origin
    - make package
    - mkdir -p ${CI_PROJECT_DIR}/stage-artifacts
    - mv mender-monitor-*.tar.gz ${CI_PROJECT_DIR}/stage-artifacts
    - ls -lh ${CI_PROJECT_DIR}/stage-artifacts/
  artifacts:
    paths:
      - stage-artifacts

build:mender-gateway:package:
  tags:
    - mender-qa-worker-generic-light
  stage: build
  needs:
    - init:workspace
  allow_failure: false
  before_script:
    # Early exit if repository is not checked out
    - apt update && apt install -yyq xz-utils
    - xz -d workspace.tar.xz
    - tar -tf workspace.tar
        ./go/src/github.com/mendersoftware/mender-gateway  >/dev/null 2>/dev/null || exit 0
    # Restore workspace from init stage
    - export WORKSPACE=$(realpath ${CI_PROJECT_DIR}/..)
    - mv workspace.tar /tmp
    - rm -rf ${WORKSPACE}
    - mkdir -p ${WORKSPACE}
    - cd ${WORKSPACE}
    - tar -xf /tmp/workspace.tar
    # Move into component path
    - cd ${WORKSPACE}/go/src/github.com/mendersoftware/mender-gateway
